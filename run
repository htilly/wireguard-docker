#!/bin/bash


# Find a Wireguard interface
interfaces=`find /etc/wireguard -type f`
if [[ -z $interfaces ]]; then
    echo "$(date): Interface not found in /etc/wireguard" >&2
    exit 1
fi


for interface in $interfaces; do
    echo "$(date): Starting Wireguard $interface"
    wg-quick up $interface


# Add masquerade rule for NAT'ing VPN traffic bound for the Internet
if [[ $IPTABLES_MASQ -eq 1 ]]; then
    echo "$(date): ---INFO---  Adding iptables NAT rule"
    iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
fi

### Fix route back to local network
if [[ -z $LOCAL_NETWORK ]]; then
    echo "$(date): ---INFO--- No network provides. Ignoring route back to local network"
else
    echo "$(date): ---INFO---  Adding route back to local network: $LOCAL_NETWORK"
    gw=$(ip route |awk '/default/ {print $3}')
    ip route add to $LOCAL_NETWORK via $gw dev eth0
fi

### Get external IP and check with whois for the provider of that ip.
function provider {
PROVIDER=$(curl --silent --show-error --retry 10 --fail icanhazip.com | ( read ip ;whois $ip | grep -i netname | awk '{ print $2 }' ))
}


function finish  {
    echo "$(date): Shutting down vpn"
    wg-quick down wgnet0
}

## Firs validation of external IP
provider
if [[ $PROVIDER == *$EXPECTED_PROVIDER* ]]; then
VALIDATED_IP=$(curl --silent --show-error --retry 10 --fail icanhazip.com)
echo "$(date): ---INFO---  Validated the external IP: $VALIDATED_IP"
else
echo "i$(date): ---INFO---  Can't validate provider. Aborting"
exit 1
fi

### Update the external IP
function external_ip {
EXTERNAL_IP=$(curl --silent --show-error --retry 10 --fail icanhazip.com)
}

#Set the external IP
external_ip


trap finish SIGTERM SIGINT SIGQUIT

provider
echo "$(date): ---INFO---  Current Provider: $PROVIDER"
echo "$(date): ---INFO---  Excpected Provider: $EXPECTED_PROVIDER"

# Every minute we check to our IP address
 while [[ $EXTERNAL_IP == $VALIDATED_IP ]];
do

# Update the external IP
external_ip

# For debug printing provider
echo "$(date): Current IP: $EXTERNAL_IP"
echo "$(date): Validated IP: $VALIDATED_IP"
            sleep 70;
done
done

echo "$(date): Expected VPN provider does not match external IP. Shuting down!!"
